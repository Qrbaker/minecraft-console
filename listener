#!/bin/bash

VERSION="4.0"
USERNAME=$(whoami)
CONFIG_FILE="/home/$USERNAME/.config/java_console.config"

if ! [ -e "${CONFIG_FILE}" ]; then
    echo "No config file was found"
    echo "Please run console config to make one"
    exit 1
fi

find_jar() {
    : # Need blank function to prevent errors
}

source "${CONFIG_FILE}"
profile="$1"

if [ -z "${profile}" ]; then
    echo "Pass a profile name in as the argument"
    echo "Example: $0 vanilla"
    exit 1
fi

${profile} >& /dev/null || { echo "Profile ${profile} was not found. Run console add <type> to add it"; exit 1; }

## Regexes
# Player event:
# \[(?:[0-9]{2}:*){3}\]\ \[Server\ thread\/INFO\]:\ (?:\§[0-9a-r])?([0-9a-zA-Z_]+)(?:\§[0-9a-r])? (.*)
# Player chat:
# \[(?:[0-9]{2}:*){3}\]\ \[Server\ thread\/INFO\]:\ <(?:\§[0-9a-r])?([0-9a-zA-Z_]+)(?:\§[0-9a-r])?> (.*)

LOG_FILE="${server_path}/logs/latest.log"
# Won't work on 1.7.X, but it won't do any harm either
FIREWORK="~ ~ ~ summon FireworksRocketEntity ~ ~ ~ {LifeTime:20,FireworksItem:{id:fireworks,Count:1,tag:{Fireworks:{Explosions:[{Type:1,Flicker:0,Trail:1,Colors:[2723327,13565739],FadeColors:[13344511]}]}}}}"
CHAT_FILE="${server_path}/logs/chat.log"
MINECRAFT_MAP_COMMAND="/home/mark/bin/minecraftmap request"
LOGIN_MESSAGE="Welcome to Rycieos' jaguar Minecraft server!"
TIMES_PATH="${server_path}/times"

# What is run when players say "!info" in chat. $1 is player name.
info() {
    text "$1" "No Endermen griefing: Endermen can't pick up blocks"
    text "$1" "Death count: Each player has their death count next to their name in the tab screen"
    text "$1" "Interactive server: Server commands to provide help and info. Say !help to list commands"
}

ops() {
    ops=$(grep "name" "${server_path}"/ops.json | sed 's/    "name": "\([a-zA-Z0-9_.-][a-zA-Z0-9_.-]*\)",/\1/')
    ops=$(echo "${ops}" | tr '\n' ' ' | sed -e 's/^ *//' -e 's/ *$//' -e 's/ /\|/g')
    echo "ops: ${ops}"
}

players() {
    num_players=$(command "list" && sleep 2 && grep "players" "${LOG_FILE}" | grep "online" | tail -1 | sed 's/.*\ \([0-9]\+\).*/\1/')
}

say() {
    # Sends the contents to the screen and prints it as the server
    screen -p 0 -S "${profile}" -X stuff "say $*$(printf \\r)"
}

text() {
    # Sends the contents to the screen as pure text to a specific player
    screen -p 0 -S "${profile}" -X stuff "tellraw $1 {\"text\":\"${*:2}\"}$(printf \\r)"
}

command() {
    # Sends the contents to the screen and executes it
    screen -p 0 -S "${profile}" -X stuff "$*$(printf \\r)"
}

is_running() {
    # Checks for the screen running the process
    if ( pgrep -u "$USERNAME" -f "SCREEN -dmS $1" > /dev/null ); then
        # It's running
        return 0
    else
        # It's not
        return 1
    fi
}

read_lines=$(wc -l < "${LOG_FILE}")
ops
while true; do
    lines=$(wc -l < "${LOG_FILE}")
    
    # If the log file has been reset
    if [ "${read_lines}" -gt "${lines}" ]; then
        ((read_lines = ( ${lines} - 1 ) ))
    fi
    
    while [ "${read_lines}" -lt "${lines}" ]; do
        ((read_lines += 1))
        current_line=$(sed "${read_lines}q;d" "${LOG_FILE}")
        echo "${read_lines}: ${current_line}"

        if echo "${current_line}" | grep -q "\[\([0-9]\{2\}:*\)\{3\}\]\ \[Server\ thread/INFO\]:\ \(\§[0-9a-r]\)\?[0-9a-zA-Z_]\+\(\§[0-9a-r]\)\? "; then
            player=$(echo "${current_line}" | sed 's|\[\([0-9]\{2\}:*\)\{3\}\]\ \[Server\ thread/INFO\]:\ \(\§[0-9a-r]\)\?\([0-9a-zA-Z_]\+\)\(\§[0-9a-r]\)\? \(.*\)|\3|')
            message_line=$(echo "${current_line}" | sed 's|\[\([0-9]\{2\}:*\)\{3\}\]\ \[Server\ thread/INFO\]:\ \(\§[0-9a-r]\)\?\([0-9a-zA-Z_]\+\)\(\§[0-9a-r]\)\? \(.*\)|\5|')

            if echo "${message_line}" | grep -q "joined the game"; then
                echo "$(date +%x-%X) ${player} joined the game" >> "${CHAT_FILE}"
                players
                text "${player}" "${LOGIN_MESSAGE}"

                if [ -s "${TIMES_PATH}/${player}.time" ]; then
                    time=$(cat "${TIMES_PATH}/${player}.time")
                    text "${player}" "You were last logged in at ${time}"
                else
                    text "${player}" "This is your first time on this server!"
                    command "execute ${player}" "${FIREWORK}"
                fi

                if [ "${num_players}" -lt 2 ]; then
                    time=$(cat "${TIMES_PATH}/latest")
                    text "${player}" "The last time someone was online was ${time}"
                else
                    text "${player}" "There are ${num_players} players online right now"
                fi

                text "${player}" "For more info about the server and its features, say !help in chat"
            fi

            if echo "${message_line}" | grep -q "left the game"; then
                echo "$(date +%x-%X) ${player} left the game" >> "${CHAT_FILE}"
                date +%-a\ %-b\ %-e,\ %-l:%M\ %p\ %Y > "${TIMES_PATH}/${player}.time"
                echo "${player} at $(cat "${TIMES_PATH}/${player}.time")" > "${TIMES_PATH}/latest"
            fi
    
        elif echo "${current_line}" | grep -E -i -q "(Opped |De-opped )"; then
            # Someone was opped, reload our list
            ops
        fi

        # Quit if not chat
        if echo "${current_line}" | grep -q "\[\([0-9]\{2\}:*\)\{3\}\]\ \[Server\ thread/INFO\]:\ \(\[Server\]\ \)\?<\(\§[0-9a-r]\)\?[0-9a-zA-Z_]\+\(\§[0-9a-r]\)\?> "; then
            player=$(echo "${current_line}" | sed 's|\[\([0-9]\{2\}:*\)\{3\}\]\ \[Server\ thread/INFO\]:\ \(\[Server\]\ \)\?<\(\§[0-9a-r]\)\?\([0-9a-zA-Z_]\+\)\(\§[0-9a-r]\)\?> \(.*\)|\4|')
            chat_line=$(echo "${current_line}" | sed 's|\[\([0-9]\{2\}:*\)\{3\}\]\ \[Server\ thread/INFO\]:\ \(\[Server\]\ \)\?<\(\§[0-9a-r]\)\?\([0-9a-zA-Z_]\+\)\(\§[0-9a-r]\)\?> \(.*\)|\6|')

            echo "$(date +%x-%X) <${player}> ${chat_line}" >> "${CHAT_FILE}"
        else
            continue
        fi

        if echo "${chat_line}" | grep -q "kappa"; then
            text "@a" "░░░░▄▀▀▀▀▀█▀▄▄▄▄░░░░"
            text "@a" "░░▄▀▒▓▒▓▓▒▓▒▒▓▒▓▀▄░░"
            text "@a" "▄▀▒▒▓▒▓▒▒▓▒▓▒▓▓▒▒▓█░"
            text "@a" "█▓▒▓▒▓▒▓▓▓░░░░░░▓▓█░"
            text "@a" "█▓▓▓▓▓▒▓▒░░░░░░░░▓█░"
            text "@a" "▓▓▓▓▓▒░░░░░░░░░░░░█░"
            text "@a" "▓▓▓▓░░░░▄▄▄▄░░░▄█▄▀░"
            text "@a" "░▀▄▓░░▒▀▓▓▒▒░░█▓▒▒░░"
            text "@a" "▀▄░░░░░░░░░░░░▀▄▒▒█░"
            text "@a" "░▀░▀░░░░░▒▒▀▄▄▒▀▒▒█░"
            text "@a" "░░▀░░░░░░▒▄▄▒▄▄▄▒▒█░"
            text "@a" "░░░▀▄▄▒▒░░░░▀▀▒▒▄▀░░"
            text "@a" "░░░░░▀█▄▒▒░░░░▒▄▀░░░"
            text "@a" "░░░░░░░░▀▀█▄▄▄▄▀░░░░"

        elif echo "${chat_line}" | grep -q "^!playerinfo"; then
            lookup_player=$(echo "${chat_line}" | sed 's|!playerinfo \([0-9a-zA-Z_]\+\)\ *.*|\1|')
            if [ -s "${TIMES_PATH}/${lookup_player}.time" ]; then
                time=$(cat "${TIMES_PATH}/${lookup_player}.time")
                text "${player}" "${lookup_player} was last logged in at ${time}"
            else
                text "${player}" "${lookup_player} was not found. Useage: !playerinfo PlayerName"
            fi

        elif echo "${chat_line}" | grep -q "^!playerlist"; then
            text "${player}" "Whitelist:"
            whitelist=$(cat "${server_path}/whitelist.json" | grep '"name": ' | sed 's|    "name": "\([0-9a-zA-Z_]\+\)"|\1,|' | tr '\n' ' ')
            text "${player}" "${whitelist}"
        
        elif echo "${chat_line}" | grep -q "^!firework"; then
            text "${player}" "Fine."
            command "execute ${player}" "${FIREWORK}"

        elif echo "${chat_line}" | grep -q "^!maprequest"; then
            if is_running "updatemap"; then
                text "${player}" "A map update is already running. Please wait for the current one to finish."
            else
                say "Updating online map."
                screen -dmS "updatemap" ${MINECRAFT_MAP_COMMAND} &
            fi

        elif echo "${chat_line}" | grep -q "^!info"; then
            info "${player}"

        elif echo "${chat_line}" | grep -q "^!help"; then
            text "${player}" "Server command list:"
            text "${player}" "!help    view this help menu"
            text "${player}" "!info    view server info"
            text "${player}" "!playerinfo PlayerName   display last login time of PlayerName"
            text "${player}" "!playerlist    display the server whitelist"
            text "${player}" "!maprequest    update the online map"

        elif echo "${chat_line}" | grep -q "^!"; then
            command=$(echo "${chat_line}" | sed 's|!\([a-zA-Z0-9_]\+\)\ *.*|\1|')
            text "${player}" "${command} is not a recognized command. Use !help for a list of commands"

        elif echo "${chat_line}" | grep -i "server" | grep -i "how many" | grep -i -q "players are"; then
            players
            say "There are ${num_players} in the game."

        elif echo "${chat_line}" | grep -i "what" | grep -i "you say" | grep -i -q "server"; then
            say "Unfortunately, not much."

        elif echo "${chat_line}" | grep -E -i "(hello |hi |hey |heyo )" | grep -q "server"; then
            if echo "${player}" | grep -E -q "(${ops})"; then
                say "Hello there, Master."
            else
                say "Hello there, little one."
            fi
    
        elif echo "${chat_line}" | grep -i "you there" | grep -i -q "server"; then
            if echo "${player}" | grep -E -q "(${ops})"; then
                say "I am here, Master."
            else
                say "Yes I am, watching your every move."
            fi
        fi
        
    done
    sleep .2
done
